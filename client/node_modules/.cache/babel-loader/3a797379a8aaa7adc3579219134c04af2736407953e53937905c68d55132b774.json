{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Documents\\\\digt2107-mass-splitter\\\\client\\\\src\\\\pages\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { GoogleLogin } from '@react-oauth/google';\nimport { jwtDecode } from \"jwt-decode\";\n\n//Handle user login failure\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const handleLoginFailure = error => {\n  console.error('Login Failed:', error);\n};\nfunction LoginPage() {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [user, setUser] = useState('');\n\n  //Handle user login\n  function handleLoginSuccess(credentialResponse, navigate, location) {\n    const token = jwtDecode(credentialResponse === null || credentialResponse === void 0 ? void 0 : credentialResponse.credential); //decode token\n    if (checkUser(token) !== false) {\n      var _location$state;\n      localStorage.setItem('loggedIn', true); //Store token in local storage\n      navigate(((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.from) || '/home'); //Redirect to page user was trying to access or default home page  \n    }\n  }\n  ;\n\n  //Check user in database\n  async function checkUser(token) {\n    try {\n      const email = token.email;\n      const response = await fetch(`http://localhost:3000/api/users/email/${email}`, {\n        method: 'GET'\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setUser([{\n          id: data.user_id,\n          name: data.username\n        }]);\n        console.log(user);\n        localStorage.setItem('googleToken', user);\n        return true;\n      } else {\n        const response = await fetch('/api/users/create', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            username: token.name,\n            email: token.email,\n            phone_number: '',\n            password: ''\n          })\n        });\n        if (response.ok) {\n          alert('User created successfully!');\n          return data;\n        } else {\n          const error = await response.json();\n          alert(`Error creating user: ${error.error}`);\n          return false;\n        }\n      }\n    } catch (error) {\n      console.log('Failed to connect to the server', error);\n      return false;\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen grid place-items-center bg-gradient-to-b from-lightBlue-400 to-peach-400\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card bg-base-100 shadow-xl\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-[600px] h-[300px] card-body grid place-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"card-title\",\n          children: \"Login/Sign-up with Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          onSuccess: response => handleLoginSuccess(response, navigate, location),\n          onError: handleLoginFailure,\n          theme: \"outline\",\n          size: \"large\",\n          text: \"signin_with\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 14\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n_s(LoginPage, \"Q0clgq6EJNF+8HLx+UCKaaNuuUg=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = LoginPage;\n;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","useLocation","GoogleLogin","jwtDecode","jsxDEV","_jsxDEV","handleLoginFailure","error","console","LoginPage","_s","navigate","location","user","setUser","handleLoginSuccess","credentialResponse","token","credential","checkUser","_location$state","localStorage","setItem","state","from","email","response","fetch","method","data","json","ok","id","user_id","name","username","log","headers","body","JSON","stringify","phone_number","password","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSuccess","onError","theme","size","text","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/Documents/digt2107-mass-splitter/client/src/pages/LoginPage.js"],"sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\nimport {useNavigate, useLocation } from 'react-router-dom';\r\nimport { GoogleLogin } from '@react-oauth/google';\r\nimport { jwtDecode } from \"jwt-decode\";\r\n\r\n\r\n//Handle user login failure\r\nexport const handleLoginFailure = (error) => {\r\n    console.error('Login Failed:', error);\r\n};\r\n\r\nfunction LoginPage() {\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const [user, setUser] = useState('');\r\n\r\n    //Handle user login\r\n    function handleLoginSuccess(credentialResponse, navigate, location) {\r\n        const token = jwtDecode(credentialResponse?.credential); //decode token\r\n        if (checkUser(token) !== false) {\r\n            localStorage.setItem('loggedIn', true); //Store token in local storage\r\n            navigate(location.state?.from || '/home'); //Redirect to page user was trying to access or default home page  \r\n        }\r\n\r\n    };\r\n\r\n    //Check user in database\r\n    async function checkUser(token) {\r\n        try {\r\n            const email = token.email;\r\n            const response = await fetch(`http://localhost:3000/api/users/email/${email}`, { method: 'GET' });\r\n            const data = await response.json();\r\n            if (response.ok) {\r\n                setUser([{ id: data.user_id, name: data.username }]);\r\n                console.log(user);\r\n                localStorage.setItem('googleToken', user);\r\n                return true;\r\n            }\r\n            else {\r\n                const response = await fetch('/api/users/create', {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify({\r\n                        username: token.name,\r\n                        email: token.email,\r\n                        phone_number: '',\r\n                        password: '',\r\n                    }),\r\n                });\r\n\r\n                if (response.ok) {\r\n                    alert('User created successfully!');\r\n                    return data;\r\n                } else {\r\n                    const error = await response.json();\r\n                    alert(`Error creating user: ${error.error}`);\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.log('Failed to connect to the server', error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"h-screen grid place-items-center bg-gradient-to-b from-lightBlue-400 to-peach-400\">\r\n             <div className=\"card bg-base-100 shadow-xl\">\r\n                <div className=\"w-[600px] h-[300px] card-body grid place-items-center\">\r\n                    <h1 className=\"card-title\">Login/Sign-up with Google</h1> \r\n                    {/*Google sign in button*/}\r\n                        <GoogleLogin\r\n                            onSuccess={(response) => handleLoginSuccess(response, navigate, location)}\r\n                            onError={handleLoginFailure}\r\n                            theme=\"outline\"\r\n                            size=\"large\"\r\n                            text=\"signin_with\" \r\n                        />                                 \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAAQC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC1D,SAASC,WAAW,QAAQ,qBAAqB;AACjD,SAASC,SAAS,QAAQ,YAAY;;AAGtC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,kBAAkB,GAAIC,KAAK,IAAK;EACzCC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;AACzC,CAAC;AAED,SAASE,SAASA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAMY,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;;EAEpC;EACA,SAASgB,kBAAkBA,CAACC,kBAAkB,EAAEL,QAAQ,EAAEC,QAAQ,EAAE;IAChE,MAAMK,KAAK,GAAGd,SAAS,CAACa,kBAAkB,aAAlBA,kBAAkB,uBAAlBA,kBAAkB,CAAEE,UAAU,CAAC,CAAC,CAAC;IACzD,IAAIC,SAAS,CAACF,KAAK,CAAC,KAAK,KAAK,EAAE;MAAA,IAAAG,eAAA;MAC5BC,YAAY,CAACC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC;MACxCX,QAAQ,CAAC,EAAAS,eAAA,GAAAR,QAAQ,CAACW,KAAK,cAAAH,eAAA,uBAAdA,eAAA,CAAgBI,IAAI,KAAI,OAAO,CAAC,CAAC,CAAC;IAC/C;EAEJ;EAAC;;EAED;EACA,eAAeL,SAASA,CAACF,KAAK,EAAE;IAC5B,IAAI;MACA,MAAMQ,KAAK,GAAGR,KAAK,CAACQ,KAAK;MACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyCF,KAAK,EAAE,EAAE;QAAEG,MAAM,EAAE;MAAM,CAAC,CAAC;MACjG,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;MAClC,IAAIJ,QAAQ,CAACK,EAAE,EAAE;QACbjB,OAAO,CAAC,CAAC;UAAEkB,EAAE,EAAEH,IAAI,CAACI,OAAO;UAAEC,IAAI,EAAEL,IAAI,CAACM;QAAS,CAAC,CAAC,CAAC;QACpD3B,OAAO,CAAC4B,GAAG,CAACvB,IAAI,CAAC;QACjBQ,YAAY,CAACC,OAAO,CAAC,aAAa,EAAET,IAAI,CAAC;QACzC,OAAO,IAAI;MACf,CAAC,MACI;QACD,MAAMa,QAAQ,GAAG,MAAMC,KAAK,CAAC,mBAAmB,EAAE;UAC9CC,MAAM,EAAE,MAAM;UACdS,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACjBL,QAAQ,EAAElB,KAAK,CAACiB,IAAI;YACpBT,KAAK,EAAER,KAAK,CAACQ,KAAK;YAClBgB,YAAY,EAAE,EAAE;YAChBC,QAAQ,EAAE;UACd,CAAC;QACL,CAAC,CAAC;QAEF,IAAIhB,QAAQ,CAACK,EAAE,EAAE;UACbY,KAAK,CAAC,4BAA4B,CAAC;UACnC,OAAOd,IAAI;QACf,CAAC,MAAM;UACH,MAAMtB,KAAK,GAAG,MAAMmB,QAAQ,CAACI,IAAI,CAAC,CAAC;UACnCa,KAAK,CAAC,wBAAwBpC,KAAK,CAACA,KAAK,EAAE,CAAC;UAC5C,OAAO,KAAK;QAChB;MACJ;IACJ,CAAC,CACD,OAAOA,KAAK,EAAE;MACVC,OAAO,CAAC4B,GAAG,CAAC,iCAAiC,EAAE7B,KAAK,CAAC;MACrD,OAAO,KAAK;IAChB;EACJ;EAEA,oBAEIF,OAAA;IAAKuC,SAAS,EAAC,mFAAmF;IAAAC,QAAA,eAC7FxC,OAAA;MAAKuC,SAAS,EAAC,4BAA4B;MAAAC,QAAA,eACxCxC,OAAA;QAAKuC,SAAS,EAAC,uDAAuD;QAAAC,QAAA,gBAClExC,OAAA;UAAIuC,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAC;QAAyB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAErD5C,OAAA,CAACH,WAAW;UACRgD,SAAS,EAAGxB,QAAQ,IAAKX,kBAAkB,CAACW,QAAQ,EAAEf,QAAQ,EAAEC,QAAQ,CAAE;UAC1EuC,OAAO,EAAE7C,kBAAmB;UAC5B8C,KAAK,EAAC,SAAS;UACfC,IAAI,EAAC,OAAO;UACZC,IAAI,EAAC;QAAa;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACvC,EAAA,CAzEQD,SAAS;EAAA,QACGT,WAAW,EACXC,WAAW;AAAA;AAAAsD,EAAA,GAFvB9C,SAAS;AAyEjB;AAED,eAAeA,SAAS;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}