{"ast":null,"code":"const db = require('../database/db-connection');\nconst User = {\n  create: (user, callback) => {\n    const sql = 'INSERT INTO users (username, email, phone_number, password) VALUES (?, ?, ?, ?)';\n    db.query(sql, [user.username, user.email, user.phone_number, user.password], callback);\n  },\n  findById: (id, callback) => {\n    const sql = 'SELECT * FROM users WHERE user_id = ?';\n    db.query(sql, [id], callback);\n  },\n  findByEmail: (email, callback) => {\n    const sql = 'SELECT * FROM users WHERE email = ?';\n    db.query(sql, [email], callback);\n  },\n  findAll: callback => {\n    const sql = 'SELECT * FROM users';\n    db.query(sql, callback);\n  },\n  update: (id, user, callback) => {\n    const sql = 'UPDATE users SET username = ?, email = ?, phone_number = ?, password = ? WHERE user_id = ?';\n    db.query(sql, [user.username, user.email, user.phone_number, user.password, id], callback);\n  },\n  delete: (id, callback) => {\n    const sql = 'DELETE FROM users WHERE user_id = ?';\n    db.query(sql, [id], callback);\n  }\n};\nmodule.exports = User;","map":{"version":3,"names":["db","require","User","create","user","callback","sql","query","username","email","phone_number","password","findById","id","findByEmail","findAll","update","delete","module","exports"],"sources":["C:/Users/LENOVO/Documents/digt2107-mass-splitter/client/src/models/User.js"],"sourcesContent":["const db = require('../database/db-connection');\r\n\r\nconst User = {\r\n    create: (user, callback) => {\r\n        const sql = 'INSERT INTO users (username, email, phone_number, password) VALUES (?, ?, ?, ?)';\r\n        db.query(sql, [user.username, user.email, user.phone_number, user.password], callback);\r\n    },\r\n    \r\n    findById: (id, callback) => {\r\n        const sql = 'SELECT * FROM users WHERE user_id = ?';\r\n        db.query(sql, [id], callback);\r\n    },\r\n    \r\n    findByEmail: (email, callback) => {\r\n        const sql = 'SELECT * FROM users WHERE email = ?';\r\n        db.query(sql, [email], callback);\r\n    },\r\n    \r\n    findAll: (callback) => {\r\n        const sql = 'SELECT * FROM users';\r\n        db.query(sql, callback);\r\n    },\r\n    \r\n    update: (id, user, callback) => {\r\n        const sql = 'UPDATE users SET username = ?, email = ?, phone_number = ?, password = ? WHERE user_id = ?';\r\n        db.query(sql, [user.username, user.email, user.phone_number, user.password, id], callback);\r\n    },\r\n    \r\n    delete: (id, callback) => {\r\n        const sql = 'DELETE FROM users WHERE user_id = ?';\r\n        db.query(sql, [id], callback);\r\n    }\r\n};\r\n\r\nmodule.exports = User;\r\n"],"mappings":"AAAA,MAAMA,EAAE,GAAGC,OAAO,CAAC,2BAA2B,CAAC;AAE/C,MAAMC,IAAI,GAAG;EACTC,MAAM,EAAEA,CAACC,IAAI,EAAEC,QAAQ,KAAK;IACxB,MAAMC,GAAG,GAAG,iFAAiF;IAC7FN,EAAE,CAACO,KAAK,CAACD,GAAG,EAAE,CAACF,IAAI,CAACI,QAAQ,EAAEJ,IAAI,CAACK,KAAK,EAAEL,IAAI,CAACM,YAAY,EAAEN,IAAI,CAACO,QAAQ,CAAC,EAAEN,QAAQ,CAAC;EAC1F,CAAC;EAEDO,QAAQ,EAAEA,CAACC,EAAE,EAAER,QAAQ,KAAK;IACxB,MAAMC,GAAG,GAAG,uCAAuC;IACnDN,EAAE,CAACO,KAAK,CAACD,GAAG,EAAE,CAACO,EAAE,CAAC,EAAER,QAAQ,CAAC;EACjC,CAAC;EAEDS,WAAW,EAAEA,CAACL,KAAK,EAAEJ,QAAQ,KAAK;IAC9B,MAAMC,GAAG,GAAG,qCAAqC;IACjDN,EAAE,CAACO,KAAK,CAACD,GAAG,EAAE,CAACG,KAAK,CAAC,EAAEJ,QAAQ,CAAC;EACpC,CAAC;EAEDU,OAAO,EAAGV,QAAQ,IAAK;IACnB,MAAMC,GAAG,GAAG,qBAAqB;IACjCN,EAAE,CAACO,KAAK,CAACD,GAAG,EAAED,QAAQ,CAAC;EAC3B,CAAC;EAEDW,MAAM,EAAEA,CAACH,EAAE,EAAET,IAAI,EAAEC,QAAQ,KAAK;IAC5B,MAAMC,GAAG,GAAG,4FAA4F;IACxGN,EAAE,CAACO,KAAK,CAACD,GAAG,EAAE,CAACF,IAAI,CAACI,QAAQ,EAAEJ,IAAI,CAACK,KAAK,EAAEL,IAAI,CAACM,YAAY,EAAEN,IAAI,CAACO,QAAQ,EAAEE,EAAE,CAAC,EAAER,QAAQ,CAAC;EAC9F,CAAC;EAEDY,MAAM,EAAEA,CAACJ,EAAE,EAAER,QAAQ,KAAK;IACtB,MAAMC,GAAG,GAAG,qCAAqC;IACjDN,EAAE,CAACO,KAAK,CAACD,GAAG,EAAE,CAACO,EAAE,CAAC,EAAER,QAAQ,CAAC;EACjC;AACJ,CAAC;AAEDa,MAAM,CAACC,OAAO,GAAGjB,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}