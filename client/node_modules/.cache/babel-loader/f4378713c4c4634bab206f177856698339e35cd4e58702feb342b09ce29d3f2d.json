{"ast":null,"code":"'use strict';\n\nconst core = require('./index.js');\nconst EventEmitter = require('events').EventEmitter;\nconst parserCache = require('./lib/parsers/parser_cache.js');\nfunction makeDoneCb(resolve, reject, localErr) {\n  return function (err, rows, fields) {\n    if (err) {\n      localErr.message = err.message;\n      localErr.code = err.code;\n      localErr.errno = err.errno;\n      localErr.sql = err.sql;\n      localErr.sqlState = err.sqlState;\n      localErr.sqlMessage = err.sqlMessage;\n      reject(localErr);\n    } else {\n      resolve([rows, fields]);\n    }\n  };\n}\nfunction inheritEvents(source, target, events) {\n  const listeners = {};\n  target.on('newListener', eventName => {\n    if (events.indexOf(eventName) >= 0 && !target.listenerCount(eventName)) {\n      source.on(eventName, listeners[eventName] = function () {\n        const args = [].slice.call(arguments);\n        args.unshift(eventName);\n        target.emit.apply(target, args);\n      });\n    }\n  }).on('removeListener', eventName => {\n    if (events.indexOf(eventName) >= 0 && !target.listenerCount(eventName)) {\n      source.removeListener(eventName, listeners[eventName]);\n      delete listeners[eventName];\n    }\n  });\n}\nclass PromisePreparedStatementInfo {\n  constructor(statement, promiseImpl) {\n    this.statement = statement;\n    this.Promise = promiseImpl;\n  }\n  execute(parameters) {\n    const s = this.statement;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      const done = makeDoneCb(resolve, reject, localErr);\n      if (parameters) {\n        s.execute(parameters, done);\n      } else {\n        s.execute(done);\n      }\n    });\n  }\n  close() {\n    return new this.Promise(resolve => {\n      this.statement.close();\n      resolve();\n    });\n  }\n}\nclass PromiseConnection extends EventEmitter {\n  constructor(connection, promiseImpl) {\n    super();\n    this.connection = connection;\n    this.Promise = promiseImpl || Promise;\n    inheritEvents(connection, this, ['error', 'drain', 'connect', 'end', 'enqueue']);\n  }\n  release() {\n    this.connection.release();\n  }\n  query(query, params) {\n    const c = this.connection;\n    const localErr = new Error();\n    if (typeof params === 'function') {\n      throw new Error('Callback function is not available with promise clients.');\n    }\n    return new this.Promise((resolve, reject) => {\n      const done = makeDoneCb(resolve, reject, localErr);\n      if (params !== undefined) {\n        c.query(query, params, done);\n      } else {\n        c.query(query, done);\n      }\n    });\n  }\n  execute(query, params) {\n    const c = this.connection;\n    const localErr = new Error();\n    if (typeof params === 'function') {\n      throw new Error('Callback function is not available with promise clients.');\n    }\n    return new this.Promise((resolve, reject) => {\n      const done = makeDoneCb(resolve, reject, localErr);\n      if (params !== undefined) {\n        c.execute(query, params, done);\n      } else {\n        c.execute(query, done);\n      }\n    });\n  }\n  end() {\n    return new this.Promise(resolve => {\n      this.connection.end(resolve);\n    });\n  }\n  beginTransaction() {\n    const c = this.connection;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      const done = makeDoneCb(resolve, reject, localErr);\n      c.beginTransaction(done);\n    });\n  }\n  commit() {\n    const c = this.connection;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      const done = makeDoneCb(resolve, reject, localErr);\n      c.commit(done);\n    });\n  }\n  rollback() {\n    const c = this.connection;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      const done = makeDoneCb(resolve, reject, localErr);\n      c.rollback(done);\n    });\n  }\n  ping() {\n    const c = this.connection;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      c.ping(err => {\n        if (err) {\n          localErr.message = err.message;\n          localErr.code = err.code;\n          localErr.errno = err.errno;\n          localErr.sqlState = err.sqlState;\n          localErr.sqlMessage = err.sqlMessage;\n          reject(localErr);\n        } else {\n          resolve(true);\n        }\n      });\n    });\n  }\n  connect() {\n    const c = this.connection;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      c.connect((err, param) => {\n        if (err) {\n          localErr.message = err.message;\n          localErr.code = err.code;\n          localErr.errno = err.errno;\n          localErr.sqlState = err.sqlState;\n          localErr.sqlMessage = err.sqlMessage;\n          reject(localErr);\n        } else {\n          resolve(param);\n        }\n      });\n    });\n  }\n  prepare(options) {\n    const c = this.connection;\n    const promiseImpl = this.Promise;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      c.prepare(options, (err, statement) => {\n        if (err) {\n          localErr.message = err.message;\n          localErr.code = err.code;\n          localErr.errno = err.errno;\n          localErr.sqlState = err.sqlState;\n          localErr.sqlMessage = err.sqlMessage;\n          reject(localErr);\n        } else {\n          const wrappedStatement = new PromisePreparedStatementInfo(statement, promiseImpl);\n          resolve(wrappedStatement);\n        }\n      });\n    });\n  }\n  changeUser(options) {\n    const c = this.connection;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      c.changeUser(options, err => {\n        if (err) {\n          localErr.message = err.message;\n          localErr.code = err.code;\n          localErr.errno = err.errno;\n          localErr.sqlState = err.sqlState;\n          localErr.sqlMessage = err.sqlMessage;\n          reject(localErr);\n        } else {\n          resolve();\n        }\n      });\n    });\n  }\n  get config() {\n    return this.connection.config;\n  }\n  get threadId() {\n    return this.connection.threadId;\n  }\n}\nfunction createConnection(opts) {\n  const coreConnection = core.createConnection(opts);\n  const createConnectionErr = new Error();\n  const thePromise = opts.Promise || Promise;\n  if (!thePromise) {\n    throw new Error('no Promise implementation available.' + 'Use promise-enabled node version or pass userland Promise' + \" implementation as parameter, for example: { Promise: require('bluebird') }\");\n  }\n  return new thePromise((resolve, reject) => {\n    coreConnection.once('connect', () => {\n      resolve(new PromiseConnection(coreConnection, thePromise));\n    });\n    coreConnection.once('error', err => {\n      createConnectionErr.message = err.message;\n      createConnectionErr.code = err.code;\n      createConnectionErr.errno = err.errno;\n      createConnectionErr.sqlState = err.sqlState;\n      reject(createConnectionErr);\n    });\n  });\n}\n\n// note: the callback of \"changeUser\" is not called on success\n// hence there is no possibility to call \"resolve\"\n\n// patching PromiseConnection\n// create facade functions for prototype functions on \"Connection\" that are not yet\n// implemented with PromiseConnection\n\n// proxy synchronous functions only\n(function (functionsToWrap) {\n  for (let i = 0; functionsToWrap && i < functionsToWrap.length; i++) {\n    const func = functionsToWrap[i];\n    if (typeof core.Connection.prototype[func] === 'function' && PromiseConnection.prototype[func] === undefined) {\n      PromiseConnection.prototype[func] = function factory(funcName) {\n        return function () {\n          return core.Connection.prototype[funcName].apply(this.connection, arguments);\n        };\n      }(func);\n    }\n  }\n})([\n// synchronous functions\n'close', 'createBinlogStream', 'destroy', 'escape', 'escapeId', 'format', 'pause', 'pipe', 'resume', 'unprepare']);\nclass PromisePoolConnection extends PromiseConnection {\n  constructor(connection, promiseImpl) {\n    super(connection, promiseImpl);\n  }\n  destroy() {\n    return core.PoolConnection.prototype.destroy.apply(this.connection, arguments);\n  }\n}\nclass PromisePool extends EventEmitter {\n  constructor(pool, thePromise) {\n    super();\n    this.pool = pool;\n    this.Promise = thePromise || Promise;\n    inheritEvents(pool, this, ['acquire', 'connection', 'enqueue', 'release']);\n  }\n  getConnection() {\n    const corePool = this.pool;\n    return new this.Promise((resolve, reject) => {\n      corePool.getConnection((err, coreConnection) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(new PromisePoolConnection(coreConnection, this.Promise));\n        }\n      });\n    });\n  }\n  releaseConnection(connection) {\n    if (connection instanceof PromisePoolConnection) connection.release();\n  }\n  query(sql, args) {\n    const corePool = this.pool;\n    const localErr = new Error();\n    if (typeof args === 'function') {\n      throw new Error('Callback function is not available with promise clients.');\n    }\n    return new this.Promise((resolve, reject) => {\n      const done = makeDoneCb(resolve, reject, localErr);\n      if (args !== undefined) {\n        corePool.query(sql, args, done);\n      } else {\n        corePool.query(sql, done);\n      }\n    });\n  }\n  execute(sql, args) {\n    const corePool = this.pool;\n    const localErr = new Error();\n    if (typeof args === 'function') {\n      throw new Error('Callback function is not available with promise clients.');\n    }\n    return new this.Promise((resolve, reject) => {\n      const done = makeDoneCb(resolve, reject, localErr);\n      if (args) {\n        corePool.execute(sql, args, done);\n      } else {\n        corePool.execute(sql, done);\n      }\n    });\n  }\n  end() {\n    const corePool = this.pool;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      corePool.end(err => {\n        if (err) {\n          localErr.message = err.message;\n          localErr.code = err.code;\n          localErr.errno = err.errno;\n          localErr.sqlState = err.sqlState;\n          localErr.sqlMessage = err.sqlMessage;\n          reject(localErr);\n        } else {\n          resolve();\n        }\n      });\n    });\n  }\n}\nfunction createPool(opts) {\n  const corePool = core.createPool(opts);\n  const thePromise = opts.Promise || Promise;\n  if (!thePromise) {\n    throw new Error('no Promise implementation available.' + 'Use promise-enabled node version or pass userland Promise' + \" implementation as parameter, for example: { Promise: require('bluebird') }\");\n  }\n  return new PromisePool(corePool, thePromise);\n}\n(function (functionsToWrap) {\n  for (let i = 0; functionsToWrap && i < functionsToWrap.length; i++) {\n    const func = functionsToWrap[i];\n    if (typeof core.Pool.prototype[func] === 'function' && PromisePool.prototype[func] === undefined) {\n      PromisePool.prototype[func] = function factory(funcName) {\n        return function () {\n          return core.Pool.prototype[funcName].apply(this.pool, arguments);\n        };\n      }(func);\n    }\n  }\n})([\n// synchronous functions\n'escape', 'escapeId', 'format']);\nclass PromisePoolCluster extends EventEmitter {\n  constructor(poolCluster, thePromise) {\n    super();\n    this.poolCluster = poolCluster;\n    this.Promise = thePromise || Promise;\n    inheritEvents(poolCluster, this, ['warn', 'remove']);\n  }\n  getConnection(pattern, selector) {\n    const corePoolCluster = this.poolCluster;\n    return new this.Promise((resolve, reject) => {\n      corePoolCluster.getConnection(pattern, selector, (err, coreConnection) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(new PromisePoolConnection(coreConnection, this.Promise));\n        }\n      });\n    });\n  }\n  query(sql, args) {\n    const corePoolCluster = this.poolCluster;\n    const localErr = new Error();\n    if (typeof args === 'function') {\n      throw new Error('Callback function is not available with promise clients.');\n    }\n    return new this.Promise((resolve, reject) => {\n      const done = makeDoneCb(resolve, reject, localErr);\n      corePoolCluster.query(sql, args, done);\n    });\n  }\n  execute(sql, args) {\n    const corePoolCluster = this.poolCluster;\n    const localErr = new Error();\n    if (typeof args === 'function') {\n      throw new Error('Callback function is not available with promise clients.');\n    }\n    return new this.Promise((resolve, reject) => {\n      const done = makeDoneCb(resolve, reject, localErr);\n      corePoolCluster.execute(sql, args, done);\n    });\n  }\n  of(pattern, selector) {\n    return new PromisePoolCluster(this.poolCluster.of(pattern, selector), this.Promise);\n  }\n  end() {\n    const corePoolCluster = this.poolCluster;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      corePoolCluster.end(err => {\n        if (err) {\n          localErr.message = err.message;\n          localErr.code = err.code;\n          localErr.errno = err.errno;\n          localErr.sqlState = err.sqlState;\n          localErr.sqlMessage = err.sqlMessage;\n          reject(localErr);\n        } else {\n          resolve();\n        }\n      });\n    });\n  }\n}\n\n/**\r\n * proxy poolCluster synchronous functions\r\n */\n(function (functionsToWrap) {\n  for (let i = 0; functionsToWrap && i < functionsToWrap.length; i++) {\n    const func = functionsToWrap[i];\n    if (typeof core.PoolCluster.prototype[func] === 'function' && PromisePoolCluster.prototype[func] === undefined) {\n      PromisePoolCluster.prototype[func] = function factory(funcName) {\n        return function () {\n          return core.PoolCluster.prototype[funcName].apply(this.poolCluster, arguments);\n        };\n      }(func);\n    }\n  }\n})(['add']);\nfunction createPoolCluster(opts) {\n  const corePoolCluster = core.createPoolCluster(opts);\n  const thePromise = opts && opts.Promise || Promise;\n  if (!thePromise) {\n    throw new Error('no Promise implementation available.' + 'Use promise-enabled node version or pass userland Promise' + \" implementation as parameter, for example: { Promise: require('bluebird') }\");\n  }\n  return new PromisePoolCluster(corePoolCluster, thePromise);\n}\nexports.createConnection = createConnection;\nexports.createPool = createPool;\nexports.createPoolCluster = createPoolCluster;\nexports.escape = core.escape;\nexports.escapeId = core.escapeId;\nexports.format = core.format;\nexports.raw = core.raw;\nexports.PromisePool = PromisePool;\nexports.PromiseConnection = PromiseConnection;\nexports.PromisePoolConnection = PromisePoolConnection;\nexports.__defineGetter__('Types', () => require('./lib/constants/types.js'));\nexports.__defineGetter__('Charsets', () => require('./lib/constants/charsets.js'));\nexports.__defineGetter__('CharsetToEncoding', () => require('./lib/constants/charset_encodings.js'));\nexports.setMaxParserCache = function (max) {\n  parserCache.setMaxCache(max);\n};\nexports.clearParserCache = function () {\n  parserCache.clearCache();\n};","map":{"version":3,"names":["core","require","EventEmitter","parserCache","makeDoneCb","resolve","reject","localErr","err","rows","fields","message","code","errno","sql","sqlState","sqlMessage","inheritEvents","source","target","events","listeners","on","eventName","indexOf","listenerCount","args","slice","call","arguments","unshift","emit","apply","removeListener","PromisePreparedStatementInfo","constructor","statement","promiseImpl","Promise","execute","parameters","s","Error","done","close","PromiseConnection","connection","release","query","params","c","undefined","end","beginTransaction","commit","rollback","ping","connect","param","prepare","options","wrappedStatement","changeUser","config","threadId","createConnection","opts","coreConnection","createConnectionErr","thePromise","once","functionsToWrap","i","length","func","Connection","prototype","factory","funcName","PromisePoolConnection","destroy","PoolConnection","PromisePool","pool","getConnection","corePool","releaseConnection","createPool","Pool","PromisePoolCluster","poolCluster","pattern","selector","corePoolCluster","of","PoolCluster","createPoolCluster","exports","escape","escapeId","format","raw","__defineGetter__","setMaxParserCache","max","setMaxCache","clearParserCache","clearCache"],"sources":["C:/Users/LENOVO/Documents/digt2107-mass-splitter/client/node_modules/mysql2/promise.js"],"sourcesContent":["'use strict';\r\n\r\nconst core = require('./index.js');\r\nconst EventEmitter = require('events').EventEmitter;\r\nconst parserCache = require('./lib/parsers/parser_cache.js');\r\n\r\nfunction makeDoneCb(resolve, reject, localErr) {\r\n  return function (err, rows, fields) {\r\n    if (err) {\r\n      localErr.message = err.message;\r\n      localErr.code = err.code;\r\n      localErr.errno = err.errno;\r\n      localErr.sql = err.sql;\r\n      localErr.sqlState = err.sqlState;\r\n      localErr.sqlMessage = err.sqlMessage;\r\n      reject(localErr);\r\n    } else {\r\n      resolve([rows, fields]);\r\n    }\r\n  };\r\n}\r\n\r\nfunction inheritEvents(source, target, events) {\r\n  const listeners = {};\r\n  target\r\n    .on('newListener', eventName => {\r\n      if (events.indexOf(eventName) >= 0 && !target.listenerCount(eventName)) {\r\n        source.on(\r\n          eventName,\r\n          (listeners[eventName] = function () {\r\n            const args = [].slice.call(arguments);\r\n            args.unshift(eventName);\r\n\r\n            target.emit.apply(target, args);\r\n          })\r\n        );\r\n      }\r\n    })\r\n    .on('removeListener', eventName => {\r\n      if (events.indexOf(eventName) >= 0 && !target.listenerCount(eventName)) {\r\n        source.removeListener(eventName, listeners[eventName]);\r\n        delete listeners[eventName];\r\n      }\r\n    });\r\n}\r\n\r\nclass PromisePreparedStatementInfo {\r\n  constructor(statement, promiseImpl) {\r\n    this.statement = statement;\r\n    this.Promise = promiseImpl;\r\n  }\r\n\r\n  execute(parameters) {\r\n    const s = this.statement;\r\n    const localErr = new Error();\r\n    return new this.Promise((resolve, reject) => {\r\n      const done = makeDoneCb(resolve, reject, localErr);\r\n      if (parameters) {\r\n        s.execute(parameters, done);\r\n      } else {\r\n        s.execute(done);\r\n      }\r\n    });\r\n  }\r\n\r\n  close() {\r\n    return new this.Promise(resolve => {\r\n      this.statement.close();\r\n      resolve();\r\n    });\r\n  }\r\n}\r\n\r\nclass PromiseConnection extends EventEmitter {\r\n  constructor(connection, promiseImpl) {\r\n    super();\r\n    this.connection = connection;\r\n    this.Promise = promiseImpl || Promise;\r\n    inheritEvents(connection, this, [\r\n      'error',\r\n      'drain',\r\n      'connect',\r\n      'end',\r\n      'enqueue'\r\n    ]);\r\n  }\r\n\r\n  release() {\r\n    this.connection.release();\r\n  }\r\n\r\n  query(query, params) {\r\n    const c = this.connection;\r\n    const localErr = new Error();\r\n    if (typeof params === 'function') {\r\n      throw new Error(\r\n        'Callback function is not available with promise clients.'\r\n      );\r\n    }\r\n    return new this.Promise((resolve, reject) => {\r\n      const done = makeDoneCb(resolve, reject, localErr);\r\n      if (params !== undefined) {\r\n        c.query(query, params, done);\r\n      } else {\r\n        c.query(query, done);\r\n      }\r\n    });\r\n  }\r\n\r\n  execute(query, params) {\r\n    const c = this.connection;\r\n    const localErr = new Error();\r\n    if (typeof params === 'function') {\r\n      throw new Error(\r\n        'Callback function is not available with promise clients.'\r\n      );\r\n    }\r\n    return new this.Promise((resolve, reject) => {\r\n      const done = makeDoneCb(resolve, reject, localErr);\r\n      if (params !== undefined) {\r\n        c.execute(query, params, done);\r\n      } else {\r\n        c.execute(query, done);\r\n      }\r\n    });\r\n  }\r\n\r\n  end() {\r\n    return new this.Promise(resolve => {\r\n      this.connection.end(resolve);\r\n    });\r\n  }\r\n\r\n  beginTransaction() {\r\n    const c = this.connection;\r\n    const localErr = new Error();\r\n    return new this.Promise((resolve, reject) => {\r\n      const done = makeDoneCb(resolve, reject, localErr);\r\n      c.beginTransaction(done);\r\n    });\r\n  }\r\n\r\n  commit() {\r\n    const c = this.connection;\r\n    const localErr = new Error();\r\n    return new this.Promise((resolve, reject) => {\r\n      const done = makeDoneCb(resolve, reject, localErr);\r\n      c.commit(done);\r\n    });\r\n  }\r\n\r\n  rollback() {\r\n    const c = this.connection;\r\n    const localErr = new Error();\r\n    return new this.Promise((resolve, reject) => {\r\n      const done = makeDoneCb(resolve, reject, localErr);\r\n      c.rollback(done);\r\n    });\r\n  }\r\n\r\n  ping() {\r\n    const c = this.connection;\r\n    const localErr = new Error();\r\n    return new this.Promise((resolve, reject) => {\r\n      c.ping(err => {\r\n        if (err) {\r\n          localErr.message = err.message;\r\n          localErr.code = err.code;\r\n          localErr.errno = err.errno;\r\n          localErr.sqlState = err.sqlState;\r\n          localErr.sqlMessage = err.sqlMessage;\r\n          reject(localErr);\r\n        } else {\r\n          resolve(true);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  connect() {\r\n    const c = this.connection;\r\n    const localErr = new Error();\r\n    return new this.Promise((resolve, reject) => {\r\n      c.connect((err, param) => {\r\n        if (err) {\r\n          localErr.message = err.message;\r\n          localErr.code = err.code;\r\n          localErr.errno = err.errno;\r\n          localErr.sqlState = err.sqlState;\r\n          localErr.sqlMessage = err.sqlMessage;\r\n          reject(localErr);\r\n        } else {\r\n          resolve(param);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  prepare(options) {\r\n    const c = this.connection;\r\n    const promiseImpl = this.Promise;\r\n    const localErr = new Error();\r\n    return new this.Promise((resolve, reject) => {\r\n      c.prepare(options, (err, statement) => {\r\n        if (err) {\r\n          localErr.message = err.message;\r\n          localErr.code = err.code;\r\n          localErr.errno = err.errno;\r\n          localErr.sqlState = err.sqlState;\r\n          localErr.sqlMessage = err.sqlMessage;\r\n          reject(localErr);\r\n        } else {\r\n          const wrappedStatement = new PromisePreparedStatementInfo(\r\n            statement,\r\n            promiseImpl\r\n          );\r\n          resolve(wrappedStatement);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  changeUser(options) {\r\n    const c = this.connection;\r\n    const localErr = new Error();\r\n    return new this.Promise((resolve, reject) => {\r\n      c.changeUser(options, err => {\r\n        if (err) {\r\n          localErr.message = err.message;\r\n          localErr.code = err.code;\r\n          localErr.errno = err.errno;\r\n          localErr.sqlState = err.sqlState;\r\n          localErr.sqlMessage = err.sqlMessage;\r\n          reject(localErr);\r\n        } else {\r\n          resolve();\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  get config() {\r\n    return this.connection.config;\r\n  }\r\n\r\n  get threadId() {\r\n    return this.connection.threadId;\r\n  }\r\n}\r\n\r\nfunction createConnection(opts) {\r\n  const coreConnection = core.createConnection(opts);\r\n  const createConnectionErr = new Error();\r\n  const thePromise = opts.Promise || Promise;\r\n  if (!thePromise) {\r\n    throw new Error(\r\n      'no Promise implementation available.' +\r\n      'Use promise-enabled node version or pass userland Promise' +\r\n      \" implementation as parameter, for example: { Promise: require('bluebird') }\"\r\n    );\r\n  }\r\n  return new thePromise((resolve, reject) => {\r\n    coreConnection.once('connect', () => {\r\n      resolve(new PromiseConnection(coreConnection, thePromise));\r\n    });\r\n    coreConnection.once('error', err => {\r\n      createConnectionErr.message = err.message;\r\n      createConnectionErr.code = err.code;\r\n      createConnectionErr.errno = err.errno;\r\n      createConnectionErr.sqlState = err.sqlState;\r\n      reject(createConnectionErr);\r\n    });\r\n  });\r\n}\r\n\r\n// note: the callback of \"changeUser\" is not called on success\r\n// hence there is no possibility to call \"resolve\"\r\n\r\n// patching PromiseConnection\r\n// create facade functions for prototype functions on \"Connection\" that are not yet\r\n// implemented with PromiseConnection\r\n\r\n// proxy synchronous functions only\r\n(function (functionsToWrap) {\r\n  for (let i = 0; functionsToWrap && i < functionsToWrap.length; i++) {\r\n    const func = functionsToWrap[i];\r\n\r\n    if (\r\n      typeof core.Connection.prototype[func] === 'function' &&\r\n      PromiseConnection.prototype[func] === undefined\r\n    ) {\r\n      PromiseConnection.prototype[func] = (function factory(funcName) {\r\n        return function () {\r\n          return core.Connection.prototype[funcName].apply(\r\n            this.connection,\r\n            arguments\r\n          );\r\n        };\r\n      })(func);\r\n    }\r\n  }\r\n})([\r\n  // synchronous functions\r\n  'close',\r\n  'createBinlogStream',\r\n  'destroy',\r\n  'escape',\r\n  'escapeId',\r\n  'format',\r\n  'pause',\r\n  'pipe',\r\n  'resume',\r\n  'unprepare'\r\n]);\r\n\r\nclass PromisePoolConnection extends PromiseConnection {\r\n  constructor(connection, promiseImpl) {\r\n    super(connection, promiseImpl);\r\n  }\r\n\r\n  destroy() {\r\n    return core.PoolConnection.prototype.destroy.apply(\r\n      this.connection,\r\n      arguments\r\n    );\r\n  }\r\n}\r\n\r\nclass PromisePool extends EventEmitter {\r\n  constructor(pool, thePromise) {\r\n    super();\r\n    this.pool = pool;\r\n    this.Promise = thePromise || Promise;\r\n    inheritEvents(pool, this, ['acquire', 'connection', 'enqueue', 'release']);\r\n  }\r\n\r\n  getConnection() {\r\n    const corePool = this.pool;\r\n    return new this.Promise((resolve, reject) => {\r\n      corePool.getConnection((err, coreConnection) => {\r\n        if (err) {\r\n          reject(err);\r\n        } else {\r\n          resolve(new PromisePoolConnection(coreConnection, this.Promise));\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  releaseConnection(connection) {\r\n    if (connection instanceof PromisePoolConnection) connection.release();\r\n  }\r\n\r\n  query(sql, args) {\r\n    const corePool = this.pool;\r\n    const localErr = new Error();\r\n    if (typeof args === 'function') {\r\n      throw new Error(\r\n        'Callback function is not available with promise clients.'\r\n      );\r\n    }\r\n    return new this.Promise((resolve, reject) => {\r\n      const done = makeDoneCb(resolve, reject, localErr);\r\n      if (args !== undefined) {\r\n        corePool.query(sql, args, done);\r\n      } else {\r\n        corePool.query(sql, done);\r\n      }\r\n    });\r\n  }\r\n\r\n  execute(sql, args) {\r\n    const corePool = this.pool;\r\n    const localErr = new Error();\r\n    if (typeof args === 'function') {\r\n      throw new Error(\r\n        'Callback function is not available with promise clients.'\r\n      );\r\n    }\r\n    return new this.Promise((resolve, reject) => {\r\n      const done = makeDoneCb(resolve, reject, localErr);\r\n      if (args) {\r\n        corePool.execute(sql, args, done);\r\n      } else {\r\n        corePool.execute(sql, done);\r\n      }\r\n    });\r\n  }\r\n\r\n  end() {\r\n    const corePool = this.pool;\r\n    const localErr = new Error();\r\n    return new this.Promise((resolve, reject) => {\r\n      corePool.end(err => {\r\n        if (err) {\r\n          localErr.message = err.message;\r\n          localErr.code = err.code;\r\n          localErr.errno = err.errno;\r\n          localErr.sqlState = err.sqlState;\r\n          localErr.sqlMessage = err.sqlMessage;\r\n          reject(localErr);\r\n        } else {\r\n          resolve();\r\n        }\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\nfunction createPool(opts) {\r\n  const corePool = core.createPool(opts);\r\n  const thePromise = opts.Promise || Promise;\r\n  if (!thePromise) {\r\n    throw new Error(\r\n      'no Promise implementation available.' +\r\n      'Use promise-enabled node version or pass userland Promise' +\r\n      \" implementation as parameter, for example: { Promise: require('bluebird') }\"\r\n    );\r\n  }\r\n\r\n  return new PromisePool(corePool, thePromise);\r\n}\r\n\r\n(function (functionsToWrap) {\r\n  for (let i = 0; functionsToWrap && i < functionsToWrap.length; i++) {\r\n    const func = functionsToWrap[i];\r\n\r\n    if (\r\n      typeof core.Pool.prototype[func] === 'function' &&\r\n      PromisePool.prototype[func] === undefined\r\n    ) {\r\n      PromisePool.prototype[func] = (function factory(funcName) {\r\n        return function () {\r\n          return core.Pool.prototype[funcName].apply(this.pool, arguments);\r\n        };\r\n      })(func);\r\n    }\r\n  }\r\n})([\r\n  // synchronous functions\r\n  'escape',\r\n  'escapeId',\r\n  'format'\r\n]);\r\n\r\nclass PromisePoolCluster extends EventEmitter {\r\n  constructor(poolCluster, thePromise) {\r\n    super();\r\n    this.poolCluster = poolCluster;\r\n    this.Promise = thePromise || Promise;\r\n    inheritEvents(poolCluster, this, ['warn', 'remove']);\r\n  }\r\n\r\n  getConnection(pattern, selector) {\r\n    const corePoolCluster = this.poolCluster;\r\n    return new this.Promise((resolve, reject) => {\r\n      corePoolCluster.getConnection(pattern, selector, (err, coreConnection) => {\r\n        if (err) {\r\n          reject(err);\r\n        } else {\r\n          resolve(new PromisePoolConnection(coreConnection, this.Promise));\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  query(sql, args) {\r\n    const corePoolCluster = this.poolCluster;\r\n    const localErr = new Error();\r\n    if (typeof args === 'function') {\r\n      throw new Error(\r\n        'Callback function is not available with promise clients.'\r\n      );\r\n    }\r\n    return new this.Promise((resolve, reject) => {\r\n      const done = makeDoneCb(resolve, reject, localErr);\r\n      corePoolCluster.query(sql, args, done);\r\n    });\r\n  }\r\n\r\n  execute(sql, args) {\r\n    const corePoolCluster = this.poolCluster;\r\n    const localErr = new Error();\r\n    if (typeof args === 'function') {\r\n      throw new Error(\r\n        'Callback function is not available with promise clients.'\r\n      );\r\n    }\r\n    return new this.Promise((resolve, reject) => {\r\n      const done = makeDoneCb(resolve, reject, localErr);\r\n      corePoolCluster.execute(sql, args, done);\r\n    });\r\n  }\r\n\r\n  of(pattern, selector) {\r\n    return new PromisePoolCluster(\r\n      this.poolCluster.of(pattern, selector),\r\n      this.Promise\r\n    );\r\n  }\r\n\r\n  end() {\r\n    const corePoolCluster = this.poolCluster;\r\n    const localErr = new Error();\r\n    return new this.Promise((resolve, reject) => {\r\n      corePoolCluster.end(err => {\r\n        if (err) {\r\n          localErr.message = err.message;\r\n          localErr.code = err.code;\r\n          localErr.errno = err.errno;\r\n          localErr.sqlState = err.sqlState;\r\n          localErr.sqlMessage = err.sqlMessage;\r\n          reject(localErr);\r\n        } else {\r\n          resolve();\r\n        }\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * proxy poolCluster synchronous functions\r\n */\r\n(function (functionsToWrap) {\r\n  for (let i = 0; functionsToWrap && i < functionsToWrap.length; i++) {\r\n    const func = functionsToWrap[i];\r\n\r\n    if (\r\n      typeof core.PoolCluster.prototype[func] === 'function' &&\r\n      PromisePoolCluster.prototype[func] === undefined\r\n    ) {\r\n      PromisePoolCluster.prototype[func] = (function factory(funcName) {\r\n        return function () {\r\n          return core.PoolCluster.prototype[funcName].apply(this.poolCluster, arguments);\r\n        };\r\n      })(func);\r\n    }\r\n  }\r\n})([\r\n  'add'\r\n]);\r\n\r\nfunction createPoolCluster(opts) {\r\n  const corePoolCluster = core.createPoolCluster(opts);\r\n  const thePromise = (opts && opts.Promise) || Promise;\r\n  if (!thePromise) {\r\n    throw new Error(\r\n      'no Promise implementation available.' +\r\n      'Use promise-enabled node version or pass userland Promise' +\r\n      \" implementation as parameter, for example: { Promise: require('bluebird') }\"\r\n    );\r\n  }\r\n  return new PromisePoolCluster(corePoolCluster, thePromise);\r\n}\r\n\r\nexports.createConnection = createConnection;\r\nexports.createPool = createPool;\r\nexports.createPoolCluster = createPoolCluster;\r\nexports.escape = core.escape;\r\nexports.escapeId = core.escapeId;\r\nexports.format = core.format;\r\nexports.raw = core.raw;\r\nexports.PromisePool = PromisePool;\r\nexports.PromiseConnection = PromiseConnection;\r\nexports.PromisePoolConnection = PromisePoolConnection;\r\n\r\nexports.__defineGetter__('Types', () => require('./lib/constants/types.js'));\r\n\r\nexports.__defineGetter__('Charsets', () =>\r\n  require('./lib/constants/charsets.js')\r\n);\r\n\r\nexports.__defineGetter__('CharsetToEncoding', () =>\r\n  require('./lib/constants/charset_encodings.js')\r\n);\r\n\r\nexports.setMaxParserCache = function(max) {\r\n  parserCache.setMaxCache(max);\r\n};\r\n\r\nexports.clearParserCache = function() {\r\n  parserCache.clearCache();\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}