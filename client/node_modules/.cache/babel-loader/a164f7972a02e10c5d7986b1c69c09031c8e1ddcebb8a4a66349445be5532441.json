{"ast":null,"code":"'use strict';\n\n// https://mysqlserverteam.com/mysql-8-0-4-new-default-authentication-plugin-caching_sha2_password/\nconst PLUGIN_NAME = 'caching_sha2_password';\nconst crypto = require('crypto');\nconst {\n  xor,\n  xorRotating\n} = require('../auth_41');\nconst REQUEST_SERVER_KEY_PACKET = Buffer.from([2]);\nconst FAST_AUTH_SUCCESS_PACKET = Buffer.from([3]);\nconst PERFORM_FULL_AUTHENTICATION_PACKET = Buffer.from([4]);\nconst STATE_INITIAL = 0;\nconst STATE_TOKEN_SENT = 1;\nconst STATE_WAIT_SERVER_KEY = 2;\nconst STATE_FINAL = -1;\nfunction sha256(msg) {\n  const hash = crypto.createHash('sha256');\n  hash.update(msg);\n  return hash.digest();\n}\nfunction calculateToken(password, scramble) {\n  if (!password) {\n    return Buffer.alloc(0);\n  }\n  const stage1 = sha256(Buffer.from(password));\n  const stage2 = sha256(stage1);\n  const stage3 = sha256(Buffer.concat([stage2, scramble]));\n  return xor(stage1, stage3);\n}\nfunction encrypt(password, scramble, key) {\n  const stage1 = xorRotating(Buffer.from(`${password}\\0`, 'utf8'), scramble);\n  return crypto.publicEncrypt({\n    key,\n    padding: crypto.constants.RSA_PKCS1_OAEP_PADDING\n  }, stage1);\n}\nmodule.exports = (pluginOptions = {}) => ({\n  connection\n}) => {\n  let state = 0;\n  let scramble = null;\n  const password = connection.config.password;\n  const authWithKey = serverKey => {\n    const _password = encrypt(password, scramble, serverKey);\n    state = STATE_FINAL;\n    return _password;\n  };\n  return data => {\n    switch (state) {\n      case STATE_INITIAL:\n        scramble = data.slice(0, 20);\n        state = STATE_TOKEN_SENT;\n        return calculateToken(password, scramble);\n      case STATE_TOKEN_SENT:\n        if (FAST_AUTH_SUCCESS_PACKET.equals(data)) {\n          state = STATE_FINAL;\n          return null;\n        }\n        if (PERFORM_FULL_AUTHENTICATION_PACKET.equals(data)) {\n          const isSecureConnection = typeof pluginOptions.overrideIsSecure === 'undefined' ? connection.config.ssl || connection.config.socketPath : pluginOptions.overrideIsSecure;\n          if (isSecureConnection) {\n            state = STATE_FINAL;\n            return Buffer.from(`${password}\\0`, 'utf8');\n          }\n\n          // if client provides key we can save one extra roundrip on first connection\n          if (pluginOptions.serverPublicKey) {\n            return authWithKey(pluginOptions.serverPublicKey);\n          }\n          state = STATE_WAIT_SERVER_KEY;\n          return REQUEST_SERVER_KEY_PACKET;\n        }\n        throw new Error(`Invalid AuthMoreData packet received by ${PLUGIN_NAME} plugin in STATE_TOKEN_SENT state.`);\n      case STATE_WAIT_SERVER_KEY:\n        if (pluginOptions.onServerPublicKey) {\n          pluginOptions.onServerPublicKey(data);\n        }\n        return authWithKey(data);\n      case STATE_FINAL:\n        throw new Error(`Unexpected data in AuthMoreData packet received by ${PLUGIN_NAME} plugin in STATE_FINAL state.`);\n    }\n    throw new Error(`Unexpected data in AuthMoreData packet received by ${PLUGIN_NAME} plugin in state ${state}`);\n  };\n};","map":{"version":3,"names":["PLUGIN_NAME","crypto","require","xor","xorRotating","REQUEST_SERVER_KEY_PACKET","Buffer","from","FAST_AUTH_SUCCESS_PACKET","PERFORM_FULL_AUTHENTICATION_PACKET","STATE_INITIAL","STATE_TOKEN_SENT","STATE_WAIT_SERVER_KEY","STATE_FINAL","sha256","msg","hash","createHash","update","digest","calculateToken","password","scramble","alloc","stage1","stage2","stage3","concat","encrypt","key","publicEncrypt","padding","constants","RSA_PKCS1_OAEP_PADDING","module","exports","pluginOptions","connection","state","config","authWithKey","serverKey","_password","data","slice","equals","isSecureConnection","overrideIsSecure","ssl","socketPath","serverPublicKey","Error","onServerPublicKey"],"sources":["C:/Users/LENOVO/Documents/digt2107-mass-splitter/client/node_modules/mysql2/lib/auth_plugins/caching_sha2_password.js"],"sourcesContent":["'use strict';\r\n\r\n// https://mysqlserverteam.com/mysql-8-0-4-new-default-authentication-plugin-caching_sha2_password/\r\n\r\nconst PLUGIN_NAME = 'caching_sha2_password';\r\nconst crypto = require('crypto');\r\nconst { xor, xorRotating } = require('../auth_41');\r\n\r\nconst REQUEST_SERVER_KEY_PACKET = Buffer.from([2]);\r\nconst FAST_AUTH_SUCCESS_PACKET = Buffer.from([3]);\r\nconst PERFORM_FULL_AUTHENTICATION_PACKET = Buffer.from([4]);\r\n\r\nconst STATE_INITIAL = 0;\r\nconst STATE_TOKEN_SENT = 1;\r\nconst STATE_WAIT_SERVER_KEY = 2;\r\nconst STATE_FINAL = -1;\r\n\r\nfunction sha256(msg) {\r\n  const hash = crypto.createHash('sha256');\r\n  hash.update(msg);\r\n  return hash.digest();\r\n}\r\n\r\nfunction calculateToken(password, scramble) {\r\n  if (!password) {\r\n    return Buffer.alloc(0);\r\n  }\r\n  const stage1 = sha256(Buffer.from(password));\r\n  const stage2 = sha256(stage1);\r\n  const stage3 = sha256(Buffer.concat([stage2, scramble]));\r\n  return xor(stage1, stage3);\r\n}\r\n\r\nfunction encrypt(password, scramble, key) {\r\n  const stage1 = xorRotating(\r\n    Buffer.from(`${password}\\0`, 'utf8'),\r\n    scramble\r\n  );\r\n  return crypto.publicEncrypt({\r\n    key,\r\n    padding: crypto.constants.RSA_PKCS1_OAEP_PADDING\r\n  }, stage1);\r\n}\r\n\r\nmodule.exports = (pluginOptions = {}) => ({ connection }) => {\r\n  let state = 0;\r\n  let scramble = null;\r\n\r\n  const password = connection.config.password;\r\n\r\n  const authWithKey = serverKey => {\r\n    const _password = encrypt(password, scramble, serverKey);\r\n    state = STATE_FINAL;\r\n    return _password;\r\n  };\r\n\r\n  return data => {\r\n    switch (state) {\r\n      case STATE_INITIAL:\r\n        scramble = data.slice(0, 20);\r\n        state = STATE_TOKEN_SENT;\r\n        return calculateToken(password, scramble);\r\n\r\n      case STATE_TOKEN_SENT:\r\n        if (FAST_AUTH_SUCCESS_PACKET.equals(data)) {\r\n          state = STATE_FINAL;\r\n          return null;\r\n        }\r\n\r\n        if (PERFORM_FULL_AUTHENTICATION_PACKET.equals(data)) {\r\n          const isSecureConnection =\r\n            typeof pluginOptions.overrideIsSecure === 'undefined'\r\n              ? connection.config.ssl || connection.config.socketPath\r\n              : pluginOptions.overrideIsSecure;\r\n          if (isSecureConnection) {\r\n            state = STATE_FINAL;\r\n            return Buffer.from(`${password}\\0`, 'utf8');\r\n          }\r\n\r\n          // if client provides key we can save one extra roundrip on first connection\r\n          if (pluginOptions.serverPublicKey) {\r\n            return authWithKey(pluginOptions.serverPublicKey);\r\n          }\r\n\r\n          state = STATE_WAIT_SERVER_KEY;\r\n          return REQUEST_SERVER_KEY_PACKET;\r\n        }\r\n        throw new Error(\r\n          `Invalid AuthMoreData packet received by ${PLUGIN_NAME} plugin in STATE_TOKEN_SENT state.`\r\n        );\r\n      case STATE_WAIT_SERVER_KEY:\r\n        if (pluginOptions.onServerPublicKey) {\r\n          pluginOptions.onServerPublicKey(data);\r\n        }\r\n        return authWithKey(data);\r\n      case STATE_FINAL:\r\n        throw new Error(\r\n          `Unexpected data in AuthMoreData packet received by ${PLUGIN_NAME} plugin in STATE_FINAL state.`\r\n        );\r\n    }\r\n\r\n    throw new Error(\r\n      `Unexpected data in AuthMoreData packet received by ${PLUGIN_NAME} plugin in state ${state}`\r\n    );\r\n  };\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}