{"ast":null,"code":"// db-connection.js\n\nconst path = require('path');\nconst mysql = require('mysql2');\n\n// Load environment variables from the .env file located three directories up\nrequire('dotenv').config({\n  path: path.resolve(__dirname, '../../../.env')\n});\n\n// Debug: Log the resolved .env path\nconsole.log('Resolved .env path:', path.resolve(__dirname, '../../../.env'));\n\n// Debug: Log the loaded database config to verify environment variables\nconsole.log('Database Config:', {\n  host: process.env.DB_HOST,\n  user: process.env.DB_USERNAME,\n  password: process.env.DB_PASSWORD,\n  database: process.env.DB_DATABASE\n});\n\n// Create a MySQL connection using environment variables\nconst connection = mysql.createConnection({\n  host: process.env.DB_HOST,\n  user: process.env.DB_USERNAME,\n  // Ensure consistency\n  password: process.env.DB_PASSWORD,\n  database: process.env.DB_DATABASE\n});\nconnection.connect(err => {\n  if (err) {\n    console.error('Database connection failed:', err.stack);\n    return;\n  }\n  console.log('Connected to database.');\n});\nmodule.exports = connection;","map":{"version":3,"names":["path","require","mysql","config","resolve","__dirname","console","log","host","process","env","DB_HOST","user","DB_USERNAME","password","DB_PASSWORD","database","DB_DATABASE","connection","createConnection","connect","err","error","stack","module","exports"],"sources":["C:/Users/LENOVO/Documents/digt2107-mass-splitter/client/src/database/db-connection.js"],"sourcesContent":["// db-connection.js\r\n\r\nconst path = require('path');\r\nconst mysql = require('mysql2');\r\n\r\n// Load environment variables from the .env file located three directories up\r\nrequire('dotenv').config({ path: path.resolve(__dirname, '../../../.env') });\r\n\r\n// Debug: Log the resolved .env path\r\nconsole.log('Resolved .env path:', path.resolve(__dirname, '../../../.env'));\r\n\r\n// Debug: Log the loaded database config to verify environment variables\r\nconsole.log('Database Config:', {\r\n  host: process.env.DB_HOST,\r\n  user: process.env.DB_USERNAME,\r\n  password: process.env.DB_PASSWORD,\r\n  database: process.env.DB_DATABASE,\r\n});\r\n\r\n// Create a MySQL connection using environment variables\r\nconst connection = mysql.createConnection({\r\n  host: process.env.DB_HOST,\r\n  user: process.env.DB_USERNAME, // Ensure consistency\r\n  password: process.env.DB_PASSWORD,\r\n  database: process.env.DB_DATABASE,\r\n});\r\n\r\nconnection.connect((err) => {\r\n  if (err) {\r\n    console.error('Database connection failed:', err.stack);\r\n    return;\r\n  }\r\n  console.log('Connected to database.');\r\n});\r\n\r\nmodule.exports = connection;\r\n"],"mappings":"AAAA;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAMC,KAAK,GAAGD,OAAO,CAAC,QAAQ,CAAC;;AAE/B;AACAA,OAAO,CAAC,QAAQ,CAAC,CAACE,MAAM,CAAC;EAAEH,IAAI,EAAEA,IAAI,CAACI,OAAO,CAACC,SAAS,EAAE,eAAe;AAAE,CAAC,CAAC;;AAE5E;AACAC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEP,IAAI,CAACI,OAAO,CAACC,SAAS,EAAE,eAAe,CAAC,CAAC;;AAE5E;AACAC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAE;EAC9BC,IAAI,EAAEC,OAAO,CAACC,GAAG,CAACC,OAAO;EACzBC,IAAI,EAAEH,OAAO,CAACC,GAAG,CAACG,WAAW;EAC7BC,QAAQ,EAAEL,OAAO,CAACC,GAAG,CAACK,WAAW;EACjCC,QAAQ,EAAEP,OAAO,CAACC,GAAG,CAACO;AACxB,CAAC,CAAC;;AAEF;AACA,MAAMC,UAAU,GAAGhB,KAAK,CAACiB,gBAAgB,CAAC;EACxCX,IAAI,EAAEC,OAAO,CAACC,GAAG,CAACC,OAAO;EACzBC,IAAI,EAAEH,OAAO,CAACC,GAAG,CAACG,WAAW;EAAE;EAC/BC,QAAQ,EAAEL,OAAO,CAACC,GAAG,CAACK,WAAW;EACjCC,QAAQ,EAAEP,OAAO,CAACC,GAAG,CAACO;AACxB,CAAC,CAAC;AAEFC,UAAU,CAACE,OAAO,CAAEC,GAAG,IAAK;EAC1B,IAAIA,GAAG,EAAE;IACPf,OAAO,CAACgB,KAAK,CAAC,6BAA6B,EAAED,GAAG,CAACE,KAAK,CAAC;IACvD;EACF;EACAjB,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;AACvC,CAAC,CAAC;AAEFiB,MAAM,CAACC,OAAO,GAAGP,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}