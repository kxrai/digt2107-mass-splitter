{"ast":null,"code":"'use strict';\n\nconst {\n  createLRU\n} = require('lru.min');\nconst parserCache = createLRU({\n  max: 15000\n});\nfunction keyFromFields(type, fields, options, config) {\n  const res = [type, typeof options.nestTables, options.nestTables, Boolean(options.rowsAsArray), Boolean(options.supportBigNumbers || config.supportBigNumbers), Boolean(options.bigNumberStrings || config.bigNumberStrings), typeof options.typeCast, options.timezone || config.timezone, Boolean(options.decimalNumbers), options.dateStrings];\n  for (let i = 0; i < fields.length; ++i) {\n    const field = fields[i];\n    res.push([field.name, field.columnType, field.length, field.schema, field.table, field.flags, field.characterSet]);\n  }\n  return JSON.stringify(res, null, 0);\n}\nfunction getParser(type, fields, options, config, compiler) {\n  const key = keyFromFields(type, fields, options, config);\n  let parser = parserCache.get(key);\n  if (parser) {\n    return parser;\n  }\n  parser = compiler(fields, options, config);\n  parserCache.set(key, parser);\n  return parser;\n}\nfunction setMaxCache(max) {\n  parserCache.resize(max);\n}\nfunction clearCache() {\n  parserCache.clear();\n}\nmodule.exports = {\n  getParser: getParser,\n  setMaxCache: setMaxCache,\n  clearCache: clearCache,\n  _keyFromFields: keyFromFields\n};","map":{"version":3,"names":["createLRU","require","parserCache","max","keyFromFields","type","fields","options","config","res","nestTables","Boolean","rowsAsArray","supportBigNumbers","bigNumberStrings","typeCast","timezone","decimalNumbers","dateStrings","i","length","field","push","name","columnType","schema","table","flags","characterSet","JSON","stringify","getParser","compiler","key","parser","get","set","setMaxCache","resize","clearCache","clear","module","exports","_keyFromFields"],"sources":["C:/Users/LENOVO/Documents/digt2107-mass-splitter/client/node_modules/mysql2/lib/parsers/parser_cache.js"],"sourcesContent":["'use strict';\r\n\r\nconst { createLRU } = require('lru.min');\r\n\r\nconst parserCache = createLRU({\r\n  max: 15000,\r\n});\r\n\r\nfunction keyFromFields(type, fields, options, config) {\r\n  const res = [\r\n    type,\r\n    typeof options.nestTables,\r\n    options.nestTables,\r\n    Boolean(options.rowsAsArray),\r\n    Boolean(options.supportBigNumbers || config.supportBigNumbers),\r\n    Boolean(options.bigNumberStrings || config.bigNumberStrings),\r\n    typeof options.typeCast,\r\n    options.timezone || config.timezone,\r\n    Boolean(options.decimalNumbers),\r\n    options.dateStrings,\r\n  ];\r\n\r\n  for (let i = 0; i < fields.length; ++i) {\r\n    const field = fields[i];\r\n\r\n    res.push([\r\n      field.name,\r\n      field.columnType,\r\n      field.length,\r\n      field.schema,\r\n      field.table,\r\n      field.flags,\r\n      field.characterSet,\r\n    ]);\r\n  }\r\n\r\n  return JSON.stringify(res, null, 0);\r\n}\r\n\r\nfunction getParser(type, fields, options, config, compiler) {\r\n  const key = keyFromFields(type, fields, options, config);\r\n  let parser = parserCache.get(key);\r\n\r\n  if (parser) {\r\n    return parser;\r\n  }\r\n\r\n  parser = compiler(fields, options, config);\r\n  parserCache.set(key, parser);\r\n  return parser;\r\n}\r\n\r\nfunction setMaxCache(max) {\r\n  parserCache.resize(max);\r\n}\r\n\r\nfunction clearCache() {\r\n  parserCache.clear();\r\n}\r\n\r\nmodule.exports = {\r\n  getParser: getParser,\r\n  setMaxCache: setMaxCache,\r\n  clearCache: clearCache,\r\n  _keyFromFields: keyFromFields,\r\n};\r\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAM;EAAEA;AAAU,CAAC,GAAGC,OAAO,CAAC,SAAS,CAAC;AAExC,MAAMC,WAAW,GAAGF,SAAS,CAAC;EAC5BG,GAAG,EAAE;AACP,CAAC,CAAC;AAEF,SAASC,aAAaA,CAACC,IAAI,EAAEC,MAAM,EAAEC,OAAO,EAAEC,MAAM,EAAE;EACpD,MAAMC,GAAG,GAAG,CACVJ,IAAI,EACJ,OAAOE,OAAO,CAACG,UAAU,EACzBH,OAAO,CAACG,UAAU,EAClBC,OAAO,CAACJ,OAAO,CAACK,WAAW,CAAC,EAC5BD,OAAO,CAACJ,OAAO,CAACM,iBAAiB,IAAIL,MAAM,CAACK,iBAAiB,CAAC,EAC9DF,OAAO,CAACJ,OAAO,CAACO,gBAAgB,IAAIN,MAAM,CAACM,gBAAgB,CAAC,EAC5D,OAAOP,OAAO,CAACQ,QAAQ,EACvBR,OAAO,CAACS,QAAQ,IAAIR,MAAM,CAACQ,QAAQ,EACnCL,OAAO,CAACJ,OAAO,CAACU,cAAc,CAAC,EAC/BV,OAAO,CAACW,WAAW,CACpB;EAED,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGb,MAAM,CAACc,MAAM,EAAE,EAAED,CAAC,EAAE;IACtC,MAAME,KAAK,GAAGf,MAAM,CAACa,CAAC,CAAC;IAEvBV,GAAG,CAACa,IAAI,CAAC,CACPD,KAAK,CAACE,IAAI,EACVF,KAAK,CAACG,UAAU,EAChBH,KAAK,CAACD,MAAM,EACZC,KAAK,CAACI,MAAM,EACZJ,KAAK,CAACK,KAAK,EACXL,KAAK,CAACM,KAAK,EACXN,KAAK,CAACO,YAAY,CACnB,CAAC;EACJ;EAEA,OAAOC,IAAI,CAACC,SAAS,CAACrB,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC;AACrC;AAEA,SAASsB,SAASA,CAAC1B,IAAI,EAAEC,MAAM,EAAEC,OAAO,EAAEC,MAAM,EAAEwB,QAAQ,EAAE;EAC1D,MAAMC,GAAG,GAAG7B,aAAa,CAACC,IAAI,EAAEC,MAAM,EAAEC,OAAO,EAAEC,MAAM,CAAC;EACxD,IAAI0B,MAAM,GAAGhC,WAAW,CAACiC,GAAG,CAACF,GAAG,CAAC;EAEjC,IAAIC,MAAM,EAAE;IACV,OAAOA,MAAM;EACf;EAEAA,MAAM,GAAGF,QAAQ,CAAC1B,MAAM,EAAEC,OAAO,EAAEC,MAAM,CAAC;EAC1CN,WAAW,CAACkC,GAAG,CAACH,GAAG,EAAEC,MAAM,CAAC;EAC5B,OAAOA,MAAM;AACf;AAEA,SAASG,WAAWA,CAAClC,GAAG,EAAE;EACxBD,WAAW,CAACoC,MAAM,CAACnC,GAAG,CAAC;AACzB;AAEA,SAASoC,UAAUA,CAAA,EAAG;EACpBrC,WAAW,CAACsC,KAAK,CAAC,CAAC;AACrB;AAEAC,MAAM,CAACC,OAAO,GAAG;EACfX,SAAS,EAAEA,SAAS;EACpBM,WAAW,EAAEA,WAAW;EACxBE,UAAU,EAAEA,UAAU;EACtBI,cAAc,EAAEvC;AAClB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}