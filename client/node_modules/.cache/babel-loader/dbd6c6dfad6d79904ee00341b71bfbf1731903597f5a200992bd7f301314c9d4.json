{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Documents\\\\digt2107-mass-splitter\\\\client\\\\src\\\\pages\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { GoogleLogin } from '@react-oauth/google';\nimport { jwtDecode } from \"jwt-decode\";\n\n//Check user in database\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function checkUser(token) {\n  try {\n    const email = token.email;\n    console.log(token.email);\n    const response = await fetch(`http://localhost:3000/api/users/email/${email}`, {\n      method: 'GET'\n    });\n    const data = await response.json();\n    if (response.ok) {\n      console.log(data);\n      return true;\n    } else {\n      const response = await fetch('/api/users/create', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: token.name,\n          email: token.email,\n          phone_number: '',\n          password: ''\n        })\n      });\n      if (response.ok) {\n        alert('User created successfully!');\n      } else {\n        const error = await response.json();\n        alert(`Error creating user: ${error.error}`);\n        return false;\n      }\n    }\n  } catch (error) {\n    console.log('Failed to connect to the server', error);\n    return false;\n  }\n}\n//Handle user login\nexport function handleLoginSuccess(credentialResponse, navigate, location) {\n  const token = jwtDecode(credentialResponse === null || credentialResponse === void 0 ? void 0 : credentialResponse.credential); //decode token\n  console.log(token);\n  if (checkUser(token) == true) {\n    var _location$state;\n    localStorage.setItem('loggedIn', true); //Store token in local storage\n    localStorage.setItem('googleToken', JSON.stringify(token));\n    navigate(((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.from) || '/home'); //Redirect to page user was trying to access or default home page  \n  }\n}\n;\n//Handle user login failure\nexport const handleLoginFailure = error => {\n  console.error('Login Failed:', error);\n};\nfunction LoginPage() {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen grid place-items-center bg-gradient-to-b from-lightBlue-400 to-peach-400\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card bg-base-100 shadow-xl\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-[600px] h-[300px] card-body grid place-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"card-title\",\n          children: \"Login/Sign-up with Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          onSuccess: response => handleLoginSuccess(response, navigate, location),\n          onError: handleLoginFailure,\n          theme: \"outline\",\n          size: \"large\",\n          text: \"signin_with\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 14\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n_s(LoginPage, \"VDZHUspDq9N5O9RWjniBrjgIdAA=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = LoginPage;\n;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useNavigate","useLocation","GoogleLogin","jwtDecode","jsxDEV","_jsxDEV","checkUser","token","email","console","log","response","fetch","method","data","json","ok","headers","body","JSON","stringify","username","name","phone_number","password","alert","error","handleLoginSuccess","credentialResponse","navigate","location","credential","_location$state","localStorage","setItem","state","from","handleLoginFailure","LoginPage","_s","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSuccess","onError","theme","size","text","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/Documents/digt2107-mass-splitter/client/src/pages/LoginPage.js"],"sourcesContent":["import React from 'react';\r\nimport {useNavigate, useLocation } from 'react-router-dom';\r\nimport { GoogleLogin } from '@react-oauth/google';\r\nimport { jwtDecode } from \"jwt-decode\";\r\n\r\n//Check user in database\r\nasync function checkUser(token) {\r\n    try {\r\n        const email = token.email;\r\n        console.log(token.email);\r\n        const response = await fetch(`http://localhost:3000/api/users/email/${email}`, {method: 'GET'});\r\n        const data = await response.json();\r\n        if (response.ok) {\r\n            console.log(data);\r\n            return true;\r\n        }\r\n        else {\r\n            const response = await fetch('/api/users/create', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    username: token.name,\r\n                    email: token.email,\r\n                    phone_number: '',\r\n                    password: '',\r\n                }),\r\n            });\r\n    \r\n            if (response.ok) {\r\n                alert('User created successfully!');\r\n            } else {\r\n                const error = await response.json();\r\n                alert(`Error creating user: ${error.error}`);\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    catch (error) {\r\n        console.log('Failed to connect to the server', error);\r\n        return  false;\r\n    }\r\n}\r\n//Handle user login\r\nexport function handleLoginSuccess (credentialResponse, navigate, location) {\r\n    const token = jwtDecode(credentialResponse?.credential); //decode token\r\n    console.log(token);\r\n    if (checkUser(token) == true) {\r\n        localStorage.setItem('loggedIn', true); //Store token in local storage\r\n        localStorage.setItem('googleToken', JSON.stringify(token));\r\n        navigate(location.state?.from || '/home'); //Redirect to page user was trying to access or default home page  \r\n    }\r\n    \r\n};\r\n//Handle user login failure\r\nexport const handleLoginFailure = (error) => {\r\n    console.error('Login Failed:', error);\r\n};\r\n\r\nfunction LoginPage() {\r\n    const navigate = useNavigate();\r\n    const location = useLocation();;\r\n\r\n    return (\r\n\r\n        <div className=\"h-screen grid place-items-center bg-gradient-to-b from-lightBlue-400 to-peach-400\">\r\n             <div className=\"card bg-base-100 shadow-xl\">\r\n                <div className=\"w-[600px] h-[300px] card-body grid place-items-center\">\r\n                    <h1 className=\"card-title\">Login/Sign-up with Google</h1> \r\n                    {/*Google sign in button*/}\r\n                        <GoogleLogin\r\n                            onSuccess={(response) => handleLoginSuccess(response, navigate, location)}\r\n                            onError={handleLoginFailure}\r\n                            theme=\"outline\"\r\n                            size=\"large\"\r\n                            text=\"signin_with\" \r\n                        />                                 \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}