{"ast":null,"code":"'use strict';\n\n/*\r\n\r\n  this seems to be not only shorter, but faster than\r\n  string.replace(/\\\\/g, '\\\\\\\\').\r\n            replace(/\\u0008/g, '\\\\b').\r\n            replace(/\\t/g, '\\\\t').\r\n            replace(/\\n/g, '\\\\n').\r\n            replace(/\\f/g, '\\\\f').\r\n            replace(/\\r/g, '\\\\r').\r\n            replace(/'/g, '\\\\\\'').\r\n            replace(/\"/g, '\\\\\"');\r\n  or string.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\")\r\n  see http://jsperf.com/string-escape-regexp-vs-json-stringify\r\n  */\nfunction srcEscape(str) {\n  return JSON.stringify({\n    [str]: 1\n  }).slice(1, -3);\n}\nexports.srcEscape = srcEscape;\nlet highlightFn;\nlet cardinalRecommended = false;\ntry {\n  // the purpose of this is to prevent projects using Webpack from displaying a warning during runtime if cardinal is not a dependency\n  const REQUIRE_TERMINATOR = '';\n  highlightFn = require(`cardinal${REQUIRE_TERMINATOR}`).highlight;\n} catch (err) {\n  highlightFn = text => {\n    if (!cardinalRecommended) {\n      // eslint-disable-next-line no-console\n      console.log('For nicer debug output consider install cardinal@^2.0.0');\n      cardinalRecommended = true;\n    }\n    return text;\n  };\n}\n\n/**\r\n * Prints debug message with code frame, will try to use `cardinal` if available.\r\n */\nfunction printDebugWithCode(msg, code) {\n  // eslint-disable-next-line no-console\n  console.log(`\\n\\n${msg}:\\n`);\n  // eslint-disable-next-line no-console\n  console.log(`${highlightFn(code)}\\n`);\n}\nexports.printDebugWithCode = printDebugWithCode;\n\n/**\r\n * checks whether the `type` is in the `list`\r\n */\nfunction typeMatch(type, list, Types) {\n  if (Array.isArray(list)) {\n    return list.some(t => type === Types[t]);\n  }\n  return !!list;\n}\nexports.typeMatch = typeMatch;\nconst privateObjectProps = new Set(['__defineGetter__', '__defineSetter__', '__lookupGetter__', '__lookupSetter__', '__proto__']);\nexports.privateObjectProps = privateObjectProps;\nconst fieldEscape = field => {\n  if (privateObjectProps.has(field)) {\n    throw new Error(`The field name (${field}) can't be the same as an object's private property.`);\n  }\n  return srcEscape(field);\n};\nexports.fieldEscape = fieldEscape;","map":{"version":3,"names":["srcEscape","str","JSON","stringify","slice","exports","highlightFn","cardinalRecommended","REQUIRE_TERMINATOR","require","highlight","err","text","console","log","printDebugWithCode","msg","code","typeMatch","type","list","Types","Array","isArray","some","t","privateObjectProps","Set","fieldEscape","field","has","Error"],"sources":["C:/Users/LENOVO/Documents/digt2107-mass-splitter/client/node_modules/mysql2/lib/helpers.js"],"sourcesContent":["'use strict';\r\n\r\n/*\r\n\r\n  this seems to be not only shorter, but faster than\r\n  string.replace(/\\\\/g, '\\\\\\\\').\r\n            replace(/\\u0008/g, '\\\\b').\r\n            replace(/\\t/g, '\\\\t').\r\n            replace(/\\n/g, '\\\\n').\r\n            replace(/\\f/g, '\\\\f').\r\n            replace(/\\r/g, '\\\\r').\r\n            replace(/'/g, '\\\\\\'').\r\n            replace(/\"/g, '\\\\\"');\r\n  or string.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\")\r\n  see http://jsperf.com/string-escape-regexp-vs-json-stringify\r\n  */\r\nfunction srcEscape(str) {\r\n  return JSON.stringify({\r\n    [str]: 1,\r\n  }).slice(1, -3);\r\n}\r\n\r\nexports.srcEscape = srcEscape;\r\n\r\nlet highlightFn;\r\nlet cardinalRecommended = false;\r\ntry {\r\n  // the purpose of this is to prevent projects using Webpack from displaying a warning during runtime if cardinal is not a dependency\r\n  const REQUIRE_TERMINATOR = '';\r\n  highlightFn = require(`cardinal${REQUIRE_TERMINATOR}`).highlight;\r\n} catch (err) {\r\n  highlightFn = (text) => {\r\n    if (!cardinalRecommended) {\r\n      // eslint-disable-next-line no-console\r\n      console.log('For nicer debug output consider install cardinal@^2.0.0');\r\n      cardinalRecommended = true;\r\n    }\r\n    return text;\r\n  };\r\n}\r\n\r\n/**\r\n * Prints debug message with code frame, will try to use `cardinal` if available.\r\n */\r\nfunction printDebugWithCode(msg, code) {\r\n  // eslint-disable-next-line no-console\r\n  console.log(`\\n\\n${msg}:\\n`);\r\n  // eslint-disable-next-line no-console\r\n  console.log(`${highlightFn(code)}\\n`);\r\n}\r\n\r\nexports.printDebugWithCode = printDebugWithCode;\r\n\r\n/**\r\n * checks whether the `type` is in the `list`\r\n */\r\nfunction typeMatch(type, list, Types) {\r\n  if (Array.isArray(list)) {\r\n    return list.some((t) => type === Types[t]);\r\n  }\r\n\r\n  return !!list;\r\n}\r\n\r\nexports.typeMatch = typeMatch;\r\n\r\nconst privateObjectProps = new Set([\r\n  '__defineGetter__',\r\n  '__defineSetter__',\r\n  '__lookupGetter__',\r\n  '__lookupSetter__',\r\n  '__proto__',\r\n]);\r\n\r\nexports.privateObjectProps = privateObjectProps;\r\n\r\nconst fieldEscape = (field) => {\r\n  if (privateObjectProps.has(field)) {\r\n    throw new Error(\r\n      `The field name (${field}) can't be the same as an object's private property.`,\r\n    );\r\n  }\r\n\r\n  return srcEscape(field);\r\n};\r\n\r\nexports.fieldEscape = fieldEscape;\r\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAASA,CAACC,GAAG,EAAE;EACtB,OAAOC,IAAI,CAACC,SAAS,CAAC;IACpB,CAACF,GAAG,GAAG;EACT,CAAC,CAAC,CAACG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACjB;AAEAC,OAAO,CAACL,SAAS,GAAGA,SAAS;AAE7B,IAAIM,WAAW;AACf,IAAIC,mBAAmB,GAAG,KAAK;AAC/B,IAAI;EACF;EACA,MAAMC,kBAAkB,GAAG,EAAE;EAC7BF,WAAW,GAAGG,OAAO,CAAC,WAAWD,kBAAkB,EAAE,CAAC,CAACE,SAAS;AAClE,CAAC,CAAC,OAAOC,GAAG,EAAE;EACZL,WAAW,GAAIM,IAAI,IAAK;IACtB,IAAI,CAACL,mBAAmB,EAAE;MACxB;MACAM,OAAO,CAACC,GAAG,CAAC,yDAAyD,CAAC;MACtEP,mBAAmB,GAAG,IAAI;IAC5B;IACA,OAAOK,IAAI;EACb,CAAC;AACH;;AAEA;AACA;AACA;AACA,SAASG,kBAAkBA,CAACC,GAAG,EAAEC,IAAI,EAAE;EACrC;EACAJ,OAAO,CAACC,GAAG,CAAC,OAAOE,GAAG,KAAK,CAAC;EAC5B;EACAH,OAAO,CAACC,GAAG,CAAC,GAAGR,WAAW,CAACW,IAAI,CAAC,IAAI,CAAC;AACvC;AAEAZ,OAAO,CAACU,kBAAkB,GAAGA,kBAAkB;;AAE/C;AACA;AACA;AACA,SAASG,SAASA,CAACC,IAAI,EAAEC,IAAI,EAAEC,KAAK,EAAE;EACpC,IAAIC,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,EAAE;IACvB,OAAOA,IAAI,CAACI,IAAI,CAAEC,CAAC,IAAKN,IAAI,KAAKE,KAAK,CAACI,CAAC,CAAC,CAAC;EAC5C;EAEA,OAAO,CAAC,CAACL,IAAI;AACf;AAEAf,OAAO,CAACa,SAAS,GAAGA,SAAS;AAE7B,MAAMQ,kBAAkB,GAAG,IAAIC,GAAG,CAAC,CACjC,kBAAkB,EAClB,kBAAkB,EAClB,kBAAkB,EAClB,kBAAkB,EAClB,WAAW,CACZ,CAAC;AAEFtB,OAAO,CAACqB,kBAAkB,GAAGA,kBAAkB;AAE/C,MAAME,WAAW,GAAIC,KAAK,IAAK;EAC7B,IAAIH,kBAAkB,CAACI,GAAG,CAACD,KAAK,CAAC,EAAE;IACjC,MAAM,IAAIE,KAAK,CACb,mBAAmBF,KAAK,sDAC1B,CAAC;EACH;EAEA,OAAO7B,SAAS,CAAC6B,KAAK,CAAC;AACzB,CAAC;AAEDxB,OAAO,CAACuB,WAAW,GAAGA,WAAW","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}