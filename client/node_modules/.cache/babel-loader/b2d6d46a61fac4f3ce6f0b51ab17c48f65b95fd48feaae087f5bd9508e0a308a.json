{"ast":null,"code":"import{Outlet,Navigate,useLocation}from\"react-router-dom\";//Route component to protect other routes from unauthorized (not logged in) users\nimport{jsx as _jsx}from\"react/jsx-runtime\";const ProtectedRoute=()=>{const loggedIn=Boolean(localStorage.getItem('loggedIn'));const location=useLocation();return loggedIn?/*#__PURE__*/_jsx(Outlet,{}):/*#__PURE__*/_jsx(Navigate,{to:\"/login\",state:{from:location}});};export default ProtectedRoute;","map":{"version":3,"names":["Outlet","Navigate","useLocation","jsx","_jsx","ProtectedRoute","loggedIn","Boolean","localStorage","getItem","location","to","state","from"],"sources":["C:/Users/LENOVO/Documents/digt2107-mass-splitter/client/src/routes/ProtectedRoute.js"],"sourcesContent":["import { Outlet, Navigate, useLocation } from \"react-router-dom\";\r\n\r\n//Route component to protect other routes from unauthorized (not logged in) users\r\nconst ProtectedRoute = () => {\r\n    const loggedIn = Boolean(localStorage.getItem('loggedIn'));\r\n    const location = useLocation();\r\n    return loggedIn ? <Outlet/> : <Navigate to=\"/login\" state={{ from: location }} />\r\n}\r\n\r\nexport default ProtectedRoute;"],"mappings":"AAAA,OAASA,MAAM,CAAEC,QAAQ,CAAEC,WAAW,KAAQ,kBAAkB,CAEhE;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBACA,KAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CACzB,KAAM,CAAAC,QAAQ,CAAGC,OAAO,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,CAC1D,KAAM,CAAAC,QAAQ,CAAGR,WAAW,CAAC,CAAC,CAC9B,MAAO,CAAAI,QAAQ,cAAGF,IAAA,CAACJ,MAAM,GAAC,CAAC,cAAGI,IAAA,CAACH,QAAQ,EAACU,EAAE,CAAC,QAAQ,CAACC,KAAK,CAAE,CAAEC,IAAI,CAAEH,QAAS,CAAE,CAAE,CAAC,CACrF,CAAC,CAED,cAAe,CAAAL,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}